{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","SpacerXSmall","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledLogoR","StyledImg","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","width","borderRadius","alt","src","border","textAlign","fontSize","fontWeight","color","transform","target","href","length","substring","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","height","SNAPSHOT_LINK","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d8acd5f.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 14px;\n  line-height: 1.2;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid var(--secondary);\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 14px;\n  color: var(--secondary-text);\n  width: 200px;\n  cursor: pointer;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid var(--secondary);\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  @media (min-width: 0px) {\n    width: 100%;\n  }\n  @media (min-width: 800px) {\n    width: 60%;\n  }\n  @media (min-width: 1000px) {\n    width: 40%;\n  }\n  @media (min-width: 1300px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledLogoR = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n\n  align-self: end;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 2px solid var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 150px;\n  @media (min-width: 900px) {\n    width: 128px;\n  }\n  @media (min-width: 1000px) {\n    width: 200px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click BUY to mint your NFTs.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Container\n      flex={1}\n      ai={\"center\"}\n      style={{ \n        padding: 18, \n        backgroundColor: \"var(--primary)\",\n      }}\n      image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n      <s.Container \n        jc={\"left\"}\n        ai={\"left\"}\n        style={{ \n          width: \"100%\",\n          backgroundColor: \"var(--accent)\",\n          padding: 20,\n          borderRadius: 25\n        }}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n      </s.Container>\n      <s.SpacerXSmall />\n      <ResponsiveWrapper \n        flex={1} \n        style={{ padding: 18 }} \n        test>\n\n        <s.Container\n          flex={2}\n          jc={\"center\"}\n          ai={\"center\"}\n          style={{\n            backgroundColor: \"var(--accent)\",\n            padding: 0,\n            borderRadius: 25,\n            border: \"2px dotted var(--secondary)\"\n          }}\n        >\n\n          <s.TextTitle\n            style={{\n              textAlign: \"center\",\n              fontSize: 30,\n              fontWeight: \"bold\",\n              color: \"var(--accent-text)\",\n            }}\n            >\n              Mint a Blob\n          </s.TextTitle>\n          <ResponsiveWrapper \n            flex={1} \n            style={{ \n              padding: 0 ,\n              width: \"100%\"\n            }} \n            test>\n\n            <s.Container flex={1} ai={\"center\"} jc={\"center\"}>\n\n              <StyledImg \n                alt={\"example\"} \n                src={\"/config/images/example.gif\"} \n                style={{ \n                  transform: \"scale(0.8)\"\n                }}\n              />\n              \n              \n              <s.TextTitle\n                style={{\n                  textAlign: \"center\",\n                  fontSize: 15,\n                  fontWeight: \"bold\",\n                  color: \"var(--accent-text)\",\n                }}\n              >\n                {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n              </s.TextTitle>\n              <s.TextDescription\n                style={{\n                  textAlign: \"center\",\n                  color: \"var(--primary-text)\",\n                }}\n              >\n                <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                  {truncate(CONFIG.CONTRACT_ADDRESS, 25)}\n                </StyledLink>\n              </s.TextDescription>\n              <s.SpacerSmall />\n            </s.Container>\n\n            <s.Container flex={1} ai={\"center\"} jc={\"center\"}>\n              {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n                <>\n                  <s.TextTitle\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                  >\n                    The sale has ended.\n                  </s.TextTitle>\n                  <s.TextDescription\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                  >\n                    You can still find {CONFIG.NFT_NAME} on\n                  </s.TextDescription>\n                  <s.SpacerSmall />\n                  <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                    {CONFIG.MARKETPLACE}\n                  </StyledLink>\n                </>\n              ) : (\n                <>\n                  <s.TextTitle\n                    style={{ \n                      textAlign: \"center\", \n                      color: \"var(--accent-text)\" \n                    }}\n                  >\n                    1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                    {CONFIG.NETWORK.SYMBOL}.\n                  </s.TextTitle>\n                  <s.TextDescription\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                  >\n                    Excluding gas fees.\n                  </s.TextDescription>\n                  <s.SpacerSmall />\n                  {blockchain.account === \"\" ||\n                  blockchain.smartContract === null ? (\n                    <s.Container ai={\"center\"} jc={\"center\"}>\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        Connect to the {CONFIG.NETWORK.NAME} network\n                      </s.TextDescription>\n                      <s.SpacerSmall />\n                      <StyledButton\n                        onClick={(e) => {\n                          e.preventDefault();\n                          dispatch(connect());\n                          getData();\n                        }}\n                      >\n                        CONNECT\n                      </StyledButton>\n                      {blockchain.errorMsg !== \"\" ? (\n                        <>\n                          <s.SpacerSmall />\n                          <s.TextDescription\n                            style={{\n                              textAlign: \"center\",\n                              color: \"var(--accent-text)\",\n                            }}\n                          >\n                            {blockchain.errorMsg}\n                          </s.TextDescription>\n                        </>\n                      ) : null}\n                    </s.Container>\n                  ) : (\n                    <>\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {feedback}\n                      </s.TextDescription>\n                      <s.SpacerXSmall />\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <StyledRoundButton\n                          style={{ lineHeight: 0.4 }}\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            decrementMintAmount();\n                          }}\n                        >\n                          -\n                        </StyledRoundButton>\n                        <s.SpacerMedium />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {mintAmount}\n                        </s.TextDescription>\n                        <s.SpacerMedium />\n                        <StyledRoundButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            incrementMintAmount();\n                          }}\n                        >\n                          +\n                        </StyledRoundButton>\n                      </s.Container>\n                      <s.SpacerSmall />\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <StyledButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            claimNFTs();\n                            getData();\n                          }}\n                        >\n                          {claimingNft ? \"BUSY\" : \"BUY\"}\n                        </StyledButton>\n                      </s.Container>\n                    </>\n                  )}\n                </>\n              )}\n              <s.SpacerMedium />\n            </s.Container>\n\n          </ResponsiveWrapper>\n        </s.Container>\n\n      </ResponsiveWrapper>\n      <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"90%\" }}>\n        <s.TextDescription\n          style={{\n            textAlign: \"center\",\n            color: \"var(--primary-text)\",\n          }}\n        >\n          Please make sure you are connected to the right network (\n          {CONFIG.NETWORK.NAME} Mainnet) and the correct address. Please note:\n          Once you make the purchase, you cannot undo this action.\n        </s.TextDescription>\n        <s.SpacerSmall />\n        <s.TextDescription\n          style={{\n            textAlign: \"center\",\n            color: \"var(--primary-text)\",\n          }}\n        >\n          We have set the gas limit to {CONFIG.GAS_LIMIT} for the contract to\n          successfully mint your NFT. We recommend that you don't lower the\n          gas limit.\n        </s.TextDescription>\n      </s.Container>\n      <s.SpacerLarge />\n      \n      <s.Container \n        jc={\"center\"} \n        ai={\"center\"} \n        style={{ \n          width: \"100%\",\n          backgroundColor: \"var(--accent)\",\n          padding: 10,\n          borderRadius: 25\n        }}\n      >\n      <ResponsiveWrapper \n        flex={1} \n        style={{ \n          padding: 18,\n          width: \"75%\" \n        }} \n        test>\n          <s.Container \n            flex={1} \n            style={{ \n              height: 300,\n              backgroundColor: \"var(--accent)\",\n              padding: 10,\n              borderRadius: 25\n            }}\n            image={\"/config/images/Splash_600x400.png\"}\n            >\n              <s.SpacerLarge \n                style={{height: 100}}\n              />\n          </s.Container>\n          <s.Container \n            flex={1}\n            style={{ \n              backgroundColor: \"var(--accent)\",\n              padding: 25,\n            }}>\n          \n            <StyledLogo \n              alt={\"logo\"} \n              src={\"/config/images/OpenSea-Full-Logo (light).png\"} \n              />\n            <s.SpacerMedium/>\n            <s.TextTitle\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n                fontSize: 22,\n                fontWeight: \"bold\"\n              }}>\n                View and trade your NFTs on OpenSea\n            </s.TextTitle>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n              }}>\n                Every Blob a unique colour\n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n              }}>\n                Explore various materials, traits and rare accessories\n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n              }}>\n                Some even glow ;)\n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <StyledLink \n              target={\"_blank\"} \n              href={CONFIG.MARKETPLACE_LINK}>\n              {\"Go to the Lucid Blobs OpenSea collection\"}\n            </StyledLink>\n          </s.Container>\n        </ResponsiveWrapper>\n      </s.Container>\n      \n      <s.SpacerSmall/>\n\n      <s.Container \n        jc={\"center\"} \n        ai={\"center\"} \n        style={{ \n          width: \"100%\",\n          backgroundColor: \"var(--accent)\",\n          padding: 10,\n          borderRadius: 25,\n          textAlign: \"right\"\n        }}\n      >\n      <ResponsiveWrapper \n        flex={1} \n        style={{ \n          padding: 18,\n          width: \"75%\",\n          textAlign: \"right\"\n        }} \n        test>\n          <s.Container \n            flex={1}\n            jc={\"right\"}\n            ai={\"right\"}\n            style={{ \n              backgroundColor: \"var(--accent)\",\n              padding: 25,\n            }}>\n            <s.Container\n              flex={1}\n              jc={\"right\"}\n              ai={\"right\"}\n            >\n              <StyledLogoR \n                alt={\"logo\"} \n                src={\"/config/images/Gnosis_Safe_2019_logo_all_rgb_horizontal_left_white.png\"} \n                />\n            </s.Container>\n            <s.SpacerMedium/>\n            <s.TextTitle\n              style={{ \n                textAlign: \"right\", \n                color: \"var(--accent-text)\",\n                fontSize: 22,\n                fontWeight: \"bold\"\n              }}>\n                insert DAO stuff\n              </s.TextTitle>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"right\", \n                color: \"var(--accent-text)\",\n              }}>\n                50% of sales goest to the vault\n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"right\", \n                color: \"var(--accent-text)\",\n              }}>\n                more DAO stuff\n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"right\", \n                color: \"var(--accent-text)\",\n              }}>\n                bla bla bla\n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <StyledLink \n              target={\"_blank\"} \n              href={CONFIG.SNAPSHOT_LINK}>\n              {\"Go to the Lucid Spectre Snapshot Space\"}\n            </StyledLink>\n          </s.Container>\n          <s.Container \n            flex={1} \n            style={{ \n              height: 300,\n              backgroundColor: \"var(--accent)\",\n              padding: 10,\n              borderRadius: 25\n            }}\n            image={\"/config/images/Splash_600x400.png\"}\n            >\n              <s.SpacerLarge \n                style={{height: 100}}\n              />\n          </s.Container>\n        </ResponsiveWrapper>\n      </s.Container>\n    </s.Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}