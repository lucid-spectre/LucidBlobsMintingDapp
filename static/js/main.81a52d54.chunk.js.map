{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","SpacerXSmall","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","ResponsiveWrapperPanel","StyledLogo","img","StyledLogoR","StyledImg","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","width","borderRadius","alt","src","textAlign","fontSize","fontWeight","color","border","transform","target","href","length","substring","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","gasBase","GAS_BASE","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","height","SNAPSHOT_LINK","GNOSIS_LINK","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81a52d54.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-family: quicksand;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 14px;\n  line-height: 1.2;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid var(--secondary);\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 14px;\n  color: var(--secondary-text);\n  width: 200px;\n  cursor: pointer;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px solid var(--secondary);\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  @media (min-width: 0px) {\n    width: 100%;\n  }\n  @media (min-width: 800px) {\n    width: 60%;\n  }\n  @media (min-width: 1000px) {\n    width: 45%;\n  }\n  @media (min-width: 1300px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ResponsiveWrapperPanel = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  @media (min-width: 0px) {\n    width: 100%;\n  }\n  @media (min-width: 800px) {\n    width: 90%;\n  }\n  @media (min-width: 1000px) {\n    width: 75%;\n  }\n  @media (min-width: 1300px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledLogoR = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n\n  align-self: end;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 2px solid var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 150px;\n  @media (min-width: 900px) {\n    width: 128px;\n  }\n  @media (min-width: 1000px) {\n    width: 200px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click BUY to mint your NFTs.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let gasBase = CONFIG.GAS_BASE;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount + gasBase);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Container\n      flex={1}\n      ai={\"center\"}\n      style={{ \n        padding: 18, \n        backgroundColor: \"var(--primary)\",\n      }}\n      image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n      <s.Container \n        jc={\"left\"}\n        ai={\"left\"}\n        style={{ \n          width: \"100%\",\n          backgroundColor: \"var(--accent)\",\n          padding: 20,\n          borderRadius: 25\n        }}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n      </s.Container>\n      <s.SpacerSmall />\n      <s.TextTitle\n            style={{\n              textAlign: \"center\",\n              fontSize: 42,\n              fontWeight: \"bold\",\n              color: \"var(--accent-text)\",\n            }}\n            >\n              Mint a Blob\n          </s.TextTitle>\n      <ResponsiveWrapper \n        flex={1} \n        style={{ padding: 18 }} \n        test>\n\n        <s.Container\n          flex={2}\n          jc={\"center\"}\n          ai={\"center\"}\n          style={{\n            backgroundColor: \"var(--accent)\",\n            padding: 10,\n            borderRadius: 25,\n            border: \"2px dotted var(--secondary)\"\n          }}\n        >\n          <ResponsiveWrapper \n            flex={1} \n            style={{ \n              padding: 0 ,\n              width: \"100%\"\n            }} \n            test>\n\n            <s.Container flex={1} ai={\"center\"} jc={\"center\"}/>\n            <s.Container flex={0} ai={\"center\"} jc={\"center\"}>\n\n              <StyledImg \n                alt={\"example\"} \n                src={\"/config/images/example.gif\"} \n                style={{ \n                  transform: \"scale(0.8)\"\n                }}\n              />\n              \n              \n              <s.TextTitle\n                style={{\n                  textAlign: \"center\",\n                  fontSize: 22,\n                  fontWeight: \"bold\",\n                  color: \"var(--accent-text)\",\n                }}\n              >\n                {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n              </s.TextTitle>\n              <s.TextDescription\n                style={{\n                  textAlign: \"center\",\n                  color: \"var(--primary-text)\",\n                }}\n              >\n                <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                  {truncate(CONFIG.CONTRACT_ADDRESS, 25)}\n                </StyledLink>\n              </s.TextDescription>\n              <s.SpacerSmall />\n            </s.Container>\n\n            <s.SpacerMedium/>\n\n            <s.Container flex={1} ai={\"center\"} jc={\"center\"}>\n              {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n                <>\n                  <s.TextTitle\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                  >\n                    The sale has ended.\n                  </s.TextTitle>\n                  <s.TextDescription\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                  >\n                    You can still find {CONFIG.NFT_NAME} on\n                  </s.TextDescription>\n                  <s.SpacerSmall />\n                  <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                    {CONFIG.MARKETPLACE}\n                  </StyledLink>\n                </>\n              ) : (\n                <>\n                  <s.TextTitle\n                    style={{ \n                      textAlign: \"center\", \n                      color: \"var(--accent-text)\" \n                    }}\n                  >\n                    1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n                    {CONFIG.NETWORK.SYMBOL}.\n                  </s.TextTitle>\n                  <s.TextDescription\n                    style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                  >\n                    Excluding gas fees.\n                  </s.TextDescription>\n                  <s.SpacerSmall />\n                  {blockchain.account === \"\" ||\n                  blockchain.smartContract === null ? (\n                    <s.Container ai={\"center\"} jc={\"center\"}>\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        Connect to the {CONFIG.NETWORK.NAME} network\n                      </s.TextDescription>\n                      <s.SpacerSmall />\n                      <StyledButton\n                        onClick={(e) => {\n                          e.preventDefault();\n                          dispatch(connect());\n                          getData();\n                        }}\n                      >\n                        CONNECT\n                      </StyledButton>\n                      {blockchain.errorMsg !== \"\" ? (\n                        <>\n                          <s.SpacerSmall />\n                          <s.TextDescription\n                            style={{\n                              textAlign: \"center\",\n                              color: \"var(--accent-text)\",\n                            }}\n                          >\n                            {blockchain.errorMsg}\n                          </s.TextDescription>\n                        </>\n                      ) : null}\n                    </s.Container>\n                  ) : (\n                    <>\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {feedback}\n                      </s.TextDescription>\n                      <s.SpacerXSmall />\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <StyledRoundButton\n                          style={{ lineHeight: 0.4 }}\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            decrementMintAmount();\n                          }}\n                        >\n                          -\n                        </StyledRoundButton>\n                        <s.SpacerMedium />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {mintAmount}\n                        </s.TextDescription>\n                        <s.SpacerMedium />\n                        <StyledRoundButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            incrementMintAmount();\n                          }}\n                        >\n                          +\n                        </StyledRoundButton>\n                      </s.Container>\n                      <s.SpacerSmall />\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <StyledButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            claimNFTs();\n                            getData();\n                          }}\n                        >\n                          {claimingNft ? \"BUSY\" : \"BUY\"}\n                        </StyledButton>\n                      </s.Container>\n                    </>\n                  )}\n                </>\n              )}\n              <s.SpacerMedium />\n            </s.Container>\n            <s.Container flex={1} ai={\"center\"} jc={\"center\"}/>\n\n          </ResponsiveWrapper>\n        </s.Container>\n\n      </ResponsiveWrapper>\n      <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"90%\" }}>\n        <s.TextDescription\n          style={{\n            textAlign: \"center\",\n            color: \"var(--primary-text)\",\n          }}\n        >\n          Please make sure you are connected to the right network (\n          {CONFIG.NETWORK.NAME} Testnet) and the correct address. Please note:\n          Once you make the purchase, you cannot undo this action.\n          Always \n        </s.TextDescription>\n        <s.TextDescription\n          style={{\n            textAlign: \"center\",\n            color: \"var(--primary-text)\",\n          }}\n        >\n          We have set the gas limit to ( {CONFIG.GAS_BASE} base + {CONFIG.GAS_LIMIT} per token ) for the contract to\n          successfully mint your NFTs. We recommend that you don't lower the gas limit.\n        </s.TextDescription>\n      </s.Container>\n      <s.SpacerLarge />\n      \n      <s.Container \n        jc={\"center\"} \n        ai={\"center\"} \n        style={{ \n          width: \"100%\",\n          backgroundColor: \"var(--accent)\",\n          padding: 10,\n          borderRadius: 25\n        }}\n      >\n      <ResponsiveWrapperPanel \n        flex={1} \n        style={{ \n          padding: 18\n        }} \n        test>\n          <s.Container \n            flex={1} \n            style={{ \n              height: 300,\n              backgroundColor: \"var(--accent)\",\n              padding: 10,\n              borderRadius: 25\n            }}\n            image={\"/config/images/Splash_600x400.png\"}\n            >\n              <s.SpacerLarge \n                style={{height: 100}}\n              />\n          </s.Container>\n          <s.Container \n            flex={1}\n            style={{ \n              backgroundColor: \"var(--accent)\",\n              padding: 25,\n            }}>\n          \n            <StyledLogo \n              alt={\"logo\"} \n              src={\"/config/images/OpenSea-Full-Logo (light).png\"} \n              />\n            <s.SpacerMedium/>\n            <s.TextTitle\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n                fontSize: 22,\n                fontWeight: \"bold\"\n              }}>\n                View and trade your NFTs on OpenSea\n            </s.TextTitle>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n              }}>\n                Lucid Blobs are a collection of 10,000 one of a kind, fully 3D-rendered NFTs. \n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n              }}>\n                Within the collection, there are rare traits, items and more surprises. \n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n              }}>\n                Every Blob is a unique colour and pattern.\n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <StyledLink \n              target={\"_blank\"} \n              href={CONFIG.MARKETPLACE_LINK}>\n              {\"Go to the Lucid Blobs OpenSea collection\"}\n            </StyledLink>\n          </s.Container>\n        </ResponsiveWrapperPanel>\n      </s.Container>\n      \n      <s.SpacerSmall/>\n\n      <s.Container \n        jc={\"center\"} \n        ai={\"center\"} \n        style={{ \n          width: \"100%\",\n          backgroundColor: \"var(--accent)\",\n          padding: 10,\n          borderRadius: 25,\n          textAlign: \"right\"\n        }}\n      >\n      <ResponsiveWrapperPanel \n        flex={1} \n        style={{ \n          padding: 18,\n          textAlign: \"right\"\n        }} \n        test>\n          <s.Container \n            flex={1}\n            jc={\"right\"}\n            ai={\"right\"}\n            style={{ \n              backgroundColor: \"var(--accent)\",\n              padding: 25,\n            }}>\n            <s.Container\n              flex={1}\n              jc={\"right\"}\n              ai={\"right\"}\n            >\n              <StyledLogoR \n                alt={\"logo\"} \n                src={\"/config/images/Gnosis_Safe_2019_logo_all_rgb_horizontal_left_white.png\"}\n                style={{ \n                  transform: \"scale(0.9)\"\n                }} \n                />\n            </s.Container>\n            <s.TextTitle\n              style={{ \n                textAlign: \"right\", \n                color: \"var(--accent-text)\",\n                fontSize: 22,\n                fontWeight: \"bold\"\n              }}>\n                You decide what happens next\n              </s.TextTitle>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"right\", \n                color: \"var(--accent-text)\",\n              }}>\n                50% of sale profits are sent to a community Gnosis Safe.\n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"right\", \n                color: \"var(--accent-text)\",\n              }}>\n                Create/Vote on proposals: Each Blob acts as a governance token for the Lucid Spectre DAO.\n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"right\", \n                color: \"var(--accent-text)\",\n              }}>\n                Holders decide what to do with the funds in the Gnosis Safe and the future of Lucid Spectre.\n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <StyledLink \n              target={\"_blank\"} \n              href={CONFIG.SNAPSHOT_LINK}>\n              {\"Go to the Lucid Spectre Snapshot Space\"}\n            </StyledLink>\n            <s.SpacerSmall/>\n            <StyledLink \n              target={\"_blank\"} \n              href={CONFIG.GNOSIS_LINK}>\n              {\"Go to the Lucid Spectre Gnosis Safe\"}\n            </StyledLink>\n          </s.Container>\n          <s.Container \n            flex={1} \n            style={{ \n              height: 300,\n              backgroundColor: \"var(--accent)\",\n              padding: 10,\n              borderRadius: 25\n            }}\n            image={\"/config/images/coinPile2.png\"}\n            >\n              <s.SpacerLarge \n                style={{height: 100}}\n              />\n          </s.Container>\n        </ResponsiveWrapperPanel>\n      </s.Container>\n\n      <s.SpacerSmall/>\n\n      <s.Container \n        jc={\"center\"} \n        ai={\"center\"} \n        style={{ \n          width: \"100%\",\n          backgroundColor: \"var(--accent)\",\n          padding: 10,\n          borderRadius: 25\n        }}\n      >\n      <ResponsiveWrapperPanel \n        flex={1} \n        style={{ \n          padding: 18,\n        }} \n        test>\n          <s.Container \n            flex={1} \n            style={{ \n              height: 300,\n              backgroundColor: \"var(--accent)\",\n              padding: 10,\n              borderRadius: 25\n            }}\n            image={\"/config/images/RoadToNEXUS.png\"}\n            >\n              <s.SpacerLarge \n                style={{height: 100}}\n              />\n          </s.Container>\n          <s.Container \n            flex={1}\n            style={{ \n              backgroundColor: \"var(--accent)\",\n              padding: 25,\n            }}>\n          \n            <StyledLogo \n              alt={\"logo\"} \n              src={\"/config/images/logo.png\"} \n              />\n            <s.SpacerMedium/>\n            <s.TextTitle\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n                fontSize: 22,\n                fontWeight: \"bold\"\n              }}>\n                Our vision\n            </s.TextTitle>\n            <s.SpacerSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n              }}>\n                We believe in a decentralised, open, metaverse future.\n            </s.TextDescription>\n            <s.SpacerXSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n              }}>\n                All efforts must be made to prevent Big Tech from ushering in a \"Snow Crash\" dystopia.\n            </s.TextDescription>\n            <s.SpacerXSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n              }}>\n                Lucid Spectre's ultimate goal is to (help) build an open source,\n                 Web3, social VR platform powered by Ethereum. \n                 A metaverse owned by the users.\n            </s.TextDescription>\n            <s.SpacerXSmall/>\n            <s.TextDescription\n              style={{ \n                textAlign: \"left\", \n                color: \"var(--accent-text)\",\n              }}>\n                One NFT collection won't make this dream happen. \n                But it's enough to research and plan our next steps. \n                Enough to build an army. Are you with us? \n            </s.TextDescription>\n            <s.SpacerSmall/>\n            <StyledLink \n              target={\"_blank\"} \n              href=\"https://discord.gg/EKY3RKEy5z\">\n              {\"Join the Lucid Spectre Discord\"}\n            </StyledLink>\n          </s.Container>\n        </ResponsiveWrapperPanel>\n      </s.Container>\n\n      <s.SpacerSmall />\n\n      <s.Container \n        jc={\"center\"}\n        ai={\"center\"}\n        style={{ \n          width: \"100%\",\n          backgroundColor: \"var(--accent)\",\n          borderRadius: 25\n        }}\n      >\n        <s.SpacerXSmall/>\n        <s.TextTitle\n          style={{ \n            textAlign: \"center\", \n            color: \"var(--accent-text)\",\n            fontSize: 30,\n            fontWeight: \"bold\",\n            padding: 5\n          }}>\n            Become a Spectre\n        </s.TextTitle>\n        <s.TextDescription\n          style={{\n            textAlign: \"center\",\n            color: \"var(--primary-text)\",\n            padding: 5,\n            width: \"90%\"\n          }}\n        >\n          Stay up to date with the latest news about our project or become an active member of our community\n        </s.TextDescription>\n        <s.Container \n          flex={1} \n          ai={\"center\"} \n          jc={\"center\"}\n          fd={\"row\"}\n          >\n          <s.Container \n            ai={\"center\"} \n            jc={\"center\"}\n            style={{\n              padding: 32\n            }}\n          >\n            <a href=\"https://discord.gg/EKY3RKEy5z\">\n                <img alt=\"Discord\" src=\"/config/images/Discord-Logo-White.png\" width= \"64\" height=\"72\"/>\n            </a>\n          </s.Container>\n          <s.Container \n            ai={\"center\"} \n            jc={\"center\"}\n            style={{\n              padding: 32\n            }}\n            >\n              <a href=\"https://twitter.com/lucidblobs\">\n                <img alt=\"Twitter\" src=\"/config/images/2021 Twitter logo - white.png\" width= \"64\" height=\"53\"/>\n              </a>\n          </s.Container>\n        </s.Container>\n      </s.Container>\n      <s.SpacerSmall/>\n      <s.Container \n          flex={1} \n          ai={\"center\"} \n          jc={\"center\"}\n          fd={\"row\"}\n          >\n        <s.TextDescription>\n          This website was built on top of the\n        </s.TextDescription>\n        <s.SpacerXSmall/>\n        <StyledLink \n          target={\"_blank\"} \n          href={\"https://github.com/HashLips/hashlips_nft_minting_dapp\"}>\n          {\"HashLips NFT minting dapp\"}\n        </StyledLink>\n        </s.Container>\n    </s.Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}